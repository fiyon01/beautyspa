<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Notifications</title>
  <!-- Tailwind CSS -->
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- FontAwesome -->
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
</head>
<body class="min-h-screen bg-gray-100 p-6">

  <div class="max-w-4xl mx-auto bg-white rounded-lg shadow-md p-6">
    <!-- Header Section -->
    <div class="flex justify-between items-center mb-6">
      <h2 class="text-2xl font-semibold text-gray-800">Notifications</h2>
      <!-- Checkmark Icon to Mark All as Read -->
      <button 
        class="text-blue-500 text-2xl hover:text-blue-600 focus:outline-none" 
        id="mark-all-read"
      >
        <i class="fas fa-check-circle"></i>
      </button>
    </div>

    <!-- Notification List -->
    <ul id="notification-list" class="space-y-4">
      <% notifications.forEach(notification => { %>
        <li 
          class="flex items-start <%= notification.is_read ? 'bg-gray-200' : 'bg-gray-50' %> p-4 rounded-lg shadow hover:shadow-md cursor-pointer"
          data-id="<%= notification._id %>" 
          data-message="<%= notification.message %>"
        >
          <i class="fas fa-bell text-xl text-blue-500 mr-4"></i>
          <div class="flex-grow">
            <p class="text-gray-700"><%= notification.message %></p>
            <small class="text-gray-500"><%= notification.created_at.toLocaleString() %></small>
          </div>
          <% if (!notification.is_read) { %>
            <button 
              class="ml-4 text-sm text-blue-500 hover:underline" 
              data-action="mark-read"
            >
              Mark as Read
            </button>
          <% } %>
        </li>
      <% }); %>
    </ul>
  </div>

  <!-- Popup Modal -->
  <div 
    id="notification-modal" 
    class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden"
  >
    <div class="bg-white p-6 rounded-lg shadow-md w-11/12 sm:w-96">
      <h3 class="text-lg font-semibold text-gray-800 mb-4">Notification Details</h3>
      <p id="notification-details" class="text-gray-700 mb-4"></p>
      <button 
        class="bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 focus:outline-none" 
        id="close-modal"
      >
        Close
      </button>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const notificationList = document.getElementById("notification-list");
      const modal = document.getElementById("notification-modal");
      const modalDetails = document.getElementById("notification-details");
      const closeModal = document.getElementById("close-modal");
      const markAllRead = document.getElementById("mark-all-read");
      const token = localStorage.getItem("token");

      // Show Notification Details in Popup
      notificationList.addEventListener("click", (e) => {
        const notification = e.target.closest("li");
        if (notification && !e.target.hasAttribute("data-action")) {
          const message = notification.getAttribute("data-message");
          modalDetails.textContent = message;
          modal.classList.remove("hidden");

          // Mark notification as read when clicked
          const id = notification.getAttribute("data-id");
          fetch(`/notifications/mark-read/${id}`, {
            method: "POST" })
          .then(response => response.json())
          .then(data => {
            // Add class to show notification as read (optional)
            notification.classList.add("bg-gray-200");
          })
          .catch(error => console.error("Error marking as read:", error));
        }
      });

      // Close Modal
      closeModal.addEventListener("click", () => {
        modal.classList.add("hidden");
      });

      // Mark All Notifications as Read
      markAllRead.addEventListener("click", () => {
        const notifications = notificationList.querySelectorAll("li");
        notifications.forEach((notification) => {
          notification.classList.add("bg-gray-200");
          const markReadButton = notification.querySelector("[data-action='mark-read']");

          if (markReadButton) markReadButton.remove();
        });

        // Send request to mark all notifications as read
        fetch(`/notifications/mark-all-read`, {
          method: "POST" })
        .then(response => response.json())
        .then(data => {
          console.log('All notifications marked as read');
        })
        .catch(error => console.error("Error marking all as read:", error));
      });
    });
  </script>
</body>
</html>
